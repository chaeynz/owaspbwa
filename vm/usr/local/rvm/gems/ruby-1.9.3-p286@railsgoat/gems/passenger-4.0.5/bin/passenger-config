#!/usr/bin/env ruby
#  Phusion Passenger - https://www.phusionpassenger.com/
#  Copyright (c) 2010-2013 Phusion
#
#  "Phusion Passenger" is a trademark of Hongli Lai & Ninh Bui.
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

source_root = File.expand_path("..", File.dirname(__FILE__))
$LOAD_PATH.unshift("#{source_root}/lib")
require 'phusion_passenger'
PhusionPassenger.locate_directories

require 'phusion_passenger/platform_info'
require 'phusion_passenger/platform_info/compiler'

def help
	puts "Tool for showing Passenger configuration information."
	puts "Usage: passenger-config <OPTION>"
	puts
	puts "Options:"
	puts "  --root                     Show Phusion Passenger's root directory."
	puts "  --includedir               Show the Nginx runtime library headers directory."
	puts "  --nginx-libs               Show Nginx runtime library flags."
	puts "  --compiled                 Check whether runtime libraries are compiled."
	puts "  --ruby-command             Print the correct command for invoking the Ruby interpreter."
	puts "  --version                  Show version number."
end

def common_library
	require 'phusion_passenger/common_library'
	return COMMON_LIBRARY.
		only(*NGINX_LIBS_SELECTOR).
		set_output_dir("#{PhusionPassenger.lib_dir}/common/libpassenger_common")
end

case ARGV[0]
when "--root"
	puts PhusionPassenger.source_root
when "--includedir"
	puts PhusionPassenger.include_dir
when "--nginx-libs"
	text = "#{common_library.link_objects_as_string} #{PhusionPassenger.lib_dir}/common/libboost_oxt.a"
	if PhusionPassenger::PlatformInfo.has_math_library?
		text << " -lm"
	end
	puts text
when "--compiled"
	common_library.link_objects.each do |filename|
		if !File.exist?(filename)
			exit 1
		end
	end
	if File.exist?("#{PhusionPassenger.lib_dir}/common/libboost_oxt.a")
		exit 0
	else
		exit 1
	end
when "--ruby-command"
	require 'phusion_passenger/platform_info/ruby'
	ruby = PhusionPassenger::PlatformInfo.ruby_command
	puts "passenger-config was invoked through the following Ruby interpreter:"
	puts "  Command: #{ruby}"
	STDOUT.write "  Version: "
	STDOUT.flush
	system("/bin/sh -c '#{ruby} -v'")
	puts "  To use in Apache: PassengerRuby #{ruby}"
	puts "  To use in Nginx : passenger_ruby #{ruby}"
	puts "  To use with Standalone: #{ruby} #{PhusionPassenger.bin_dir}/passenger start"
	puts

	ruby = PhusionPassenger::PlatformInfo.find_command('ruby')
	if ruby
		puts "The following Ruby interpreter was found first in $PATH:"
		puts "  Command: #{ruby}"
		STDOUT.write "  Version: "
		STDOUT.flush
		system("/bin/sh -c '#{ruby} -v'")
		puts "  To use in Apache: PassengerRuby #{ruby}"
		puts "  To use in Nginx : passenger_ruby #{ruby}"
		puts "  To use with Standalone: #{ruby} #{PhusionPassenger.bin_dir}/passenger start"
	else
		puts "No Ruby interpreter found in $PATH."
	end
	puts
	puts "## Notes for RVM users"
	puts "Do you want to know which command to use for a different Ruby interpreter? 'rvm use' that Ruby interpreter, then re-run 'passenger-config --ruby-command'."
when "--version"
	puts PhusionPassenger::VERSION_STRING
else
	help
	exit 1
end
